# Copyright 2013-2014, 2017, 2021-2022 The CARFAC Authors. All Rights Reserved.
# Author: Ron Weiss <ronw@google.com>
#
# This file is part of an implementation of Lyon's cochlear model:
# "Cascade of Asymmetric Resonators with Fast-Acting Compression"
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""@package SConstruct
SConstruct file for the CARFAC C++ Library.

To install dependencies on Ubuntu, run:

  sudo apt-get install libeigen3-dev scons cmake

You can install libgtest-dev from the apt package manager:

  sudo apt-get install libgtest-dev

You will also need these path environment variables

  export EIGEN_PATH=/usr/include/eigen3
  export GTEST_SOURCE=/usr/src/gtest

If you have difficulites building with libgtest from apt,
you can build and install gtest from source:
https://github.com/google/googletest/blob/master/googletest/README.md

In this case you might need to modify the GTEST_SOURCE flag:
  export GTEST_SOURCE=/usr/src/googletest

To build all C++ libraries, run:
  scons

To run unit tests, run:
  scons test

To clean up binaries, run:
  scons --clean

To compile the web demos, install emscripten as described at
https://emscripten.org/docs/getting_started/downloads.html
Then set EM_CONFIG to the directory containing the em++ binary:

  export EM_CONFIG=/path/to/emscripten

Then run:
  scons carfac.js
  scons pitchogram_web_bindings.js
"""

import subprocess
import os

env = Environment(CPPPATH = [os.environ['EIGEN_PATH'],
                             os.environ['GTEST_SOURCE'] + '/include'])
env.MergeFlags(['-std=c++11'])

carfac_sources = [
    'agc.h',
    'binaural_sai.cc',
    'binaural_sai.h',
    'car.cc',
    'car.h',
    'carfac.cc',
    'carfac.h',
    'carfac_util.h',
    'color.cc',
    'color.h',
    'common.h',
    'ear.cc',
    'ear.h',
    'ihc.h',
    'image.cc',
    'image.h',
    'pitchogram.cc',
    'pitchogram.h',
    'pitchogram_pipeline.cc',
    'pitchogram_pipeline.h',
    'sai.cc'
    'sai.h'
    ]
carfac = env.Library(target = 'carfac', source = carfac_sources)
Default(carfac)

test_targets = [
    'binaural_sai_test',
    'carfac_test',
    'color_test',
    'image_test',
    'pitchogram_test',
    'sai_test',
    ]
test_programs = [env.Program(target = test_target,
                             source = ['%s.cc' % test_target],
                             LIBS = ['carfac', 'gtest', 'gtest_main', 'pthread'],
                             LIBPATH = ['.', '/usr/local/lib', '/usr/lib',])
                 for test_target in test_targets]
run_all_tests = env.Command('test',
                            test_programs,
                            ['./%s' % x for x in test_targets])

emscripten_sources = ['carfac.cc', 'ear.cc', 'sai.cc', 'emscripten_bindings.cc']
emscripten_env = Environment(
  ENV = dict(PATH=os.path.pathsep.join([env['ENV']['PATH'],
                                        os.environ['EM_CONFIG']])))
def web_bindings(target, sources, options=''):
  emscripten_env.Command(
    target, sources,
    [
      'em++ {options} {sources} -I {EIGEN_PATH} -o {target}'.format(
      EIGEN_PATH = os.environ['EIGEN_PATH'],
      target = target,
      sources = ' '.join(sources),
      options = ('-O2 -std=c++11 --bind -s ENVIRONMENT=web ' +
                 '-fno-exceptions ' + options))
    ])

web_bindings(
  'carfac.js',
  [
    'car.cc',
    'carfac.cc',
    'ear.cc',
    'emscripten_bindings.cc',
    'sai.cc',
  ])

web_bindings(
  'pitchogram_web_bindings.js',
  [
    'car.cc',
    'carfac.cc',
    'color.cc',
    'ear.cc',
    'image.cc',
    'pitchogram.cc',
    'pitchogram_pipeline.cc',
    'pitchogram_web_bindings.cc',
    'sai.cc',
  ],
  options = '-s USE_SDL=2')
